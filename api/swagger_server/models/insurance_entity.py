# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InsuranceEntity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, trade_name: str=None, type: str=None, classification: str=None, registration_number: str=None, year_established: date=None, address: str=None, website: str=None, telephone: str=None, credit_rating: str=None, developer_portal: str=None, product_catalog: str=None, vat: str=None):  # noqa: E501
        """InsuranceEntity - a model defined in Swagger

        :param name: The name of this InsuranceEntity.  # noqa: E501
        :type name: str
        :param trade_name: The trade_name of this InsuranceEntity.  # noqa: E501
        :type trade_name: str
        :param type: The type of this InsuranceEntity.  # noqa: E501
        :type type: str
        :param classification: The classification of this InsuranceEntity.  # noqa: E501
        :type classification: str
        :param registration_number: The registration_number of this InsuranceEntity.  # noqa: E501
        :type registration_number: str
        :param year_established: The year_established of this InsuranceEntity.  # noqa: E501
        :type year_established: date
        :param address: The address of this InsuranceEntity.  # noqa: E501
        :type address: str
        :param website: The website of this InsuranceEntity.  # noqa: E501
        :type website: str
        :param telephone: The telephone of this InsuranceEntity.  # noqa: E501
        :type telephone: str
        :param credit_rating: The credit_rating of this InsuranceEntity.  # noqa: E501
        :type credit_rating: str
        :param developer_portal: The developer_portal of this InsuranceEntity.  # noqa: E501
        :type developer_portal: str
        :param product_catalog: The product_catalog of this InsuranceEntity.  # noqa: E501
        :type product_catalog: str
        :param vat: The vat of this InsuranceEntity.  # noqa: E501
        :type vat: str
        """
        self.swagger_types = {
            'name': str,
            'trade_name': str,
            'type': str,
            'classification': str,
            'registration_number': str,
            'year_established': date,
            'address': str,
            'website': str,
            'telephone': str,
            'credit_rating': str,
            'developer_portal': str,
            'product_catalog': str,
            'vat': str
        }

        self.attribute_map = {
            'name': 'name',
            'trade_name': 'tradeName',
            'type': 'type',
            'classification': 'classification',
            'registration_number': 'registrationNumber',
            'year_established': 'yearEstablished',
            'address': 'address',
            'website': 'website',
            'telephone': 'telephone',
            'credit_rating': 'creditRating',
            'developer_portal': 'developerPortal',
            'product_catalog': 'productCatalog',
            'vat': 'vat'
        }
        self._name = name
        self._trade_name = trade_name
        self._type = type
        self._classification = classification
        self._registration_number = registration_number
        self._year_established = year_established
        self._address = address
        self._website = website
        self._telephone = telephone
        self._credit_rating = credit_rating
        self._developer_portal = developer_portal
        self._product_catalog = product_catalog
        self._vat = vat

    @classmethod
    def from_dict(cls, dikt) -> 'InsuranceEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InsuranceEntity of this InsuranceEntity.  # noqa: E501
        :rtype: InsuranceEntity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this InsuranceEntity.


        :return: The name of this InsuranceEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this InsuranceEntity.


        :param name: The name of this InsuranceEntity.
        :type name: str
        """

        self._name = name

    @property
    def trade_name(self) -> str:
        """Gets the trade_name of this InsuranceEntity.


        :return: The trade_name of this InsuranceEntity.
        :rtype: str
        """
        return self._trade_name

    @trade_name.setter
    def trade_name(self, trade_name: str):
        """Sets the trade_name of this InsuranceEntity.


        :param trade_name: The trade_name of this InsuranceEntity.
        :type trade_name: str
        """

        self._trade_name = trade_name

    @property
    def type(self) -> str:
        """Gets the type of this InsuranceEntity.


        :return: The type of this InsuranceEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this InsuranceEntity.


        :param type: The type of this InsuranceEntity.
        :type type: str
        """

        self._type = type

    @property
    def classification(self) -> str:
        """Gets the classification of this InsuranceEntity.


        :return: The classification of this InsuranceEntity.
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification: str):
        """Sets the classification of this InsuranceEntity.


        :param classification: The classification of this InsuranceEntity.
        :type classification: str
        """

        self._classification = classification

    @property
    def registration_number(self) -> str:
        """Gets the registration_number of this InsuranceEntity.


        :return: The registration_number of this InsuranceEntity.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number: str):
        """Sets the registration_number of this InsuranceEntity.


        :param registration_number: The registration_number of this InsuranceEntity.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def year_established(self) -> date:
        """Gets the year_established of this InsuranceEntity.


        :return: The year_established of this InsuranceEntity.
        :rtype: date
        """
        return self._year_established

    @year_established.setter
    def year_established(self, year_established: date):
        """Sets the year_established of this InsuranceEntity.


        :param year_established: The year_established of this InsuranceEntity.
        :type year_established: date
        """

        self._year_established = year_established

    @property
    def address(self) -> str:
        """Gets the address of this InsuranceEntity.


        :return: The address of this InsuranceEntity.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this InsuranceEntity.


        :param address: The address of this InsuranceEntity.
        :type address: str
        """

        self._address = address

    @property
    def website(self) -> str:
        """Gets the website of this InsuranceEntity.


        :return: The website of this InsuranceEntity.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website: str):
        """Sets the website of this InsuranceEntity.


        :param website: The website of this InsuranceEntity.
        :type website: str
        """

        self._website = website

    @property
    def telephone(self) -> str:
        """Gets the telephone of this InsuranceEntity.


        :return: The telephone of this InsuranceEntity.
        :rtype: str
        """
        return self._telephone

    @telephone.setter
    def telephone(self, telephone: str):
        """Sets the telephone of this InsuranceEntity.


        :param telephone: The telephone of this InsuranceEntity.
        :type telephone: str
        """

        self._telephone = telephone

    @property
    def credit_rating(self) -> str:
        """Gets the credit_rating of this InsuranceEntity.


        :return: The credit_rating of this InsuranceEntity.
        :rtype: str
        """
        return self._credit_rating

    @credit_rating.setter
    def credit_rating(self, credit_rating: str):
        """Sets the credit_rating of this InsuranceEntity.


        :param credit_rating: The credit_rating of this InsuranceEntity.
        :type credit_rating: str
        """

        self._credit_rating = credit_rating

    @property
    def developer_portal(self) -> str:
        """Gets the developer_portal of this InsuranceEntity.


        :return: The developer_portal of this InsuranceEntity.
        :rtype: str
        """
        return self._developer_portal

    @developer_portal.setter
    def developer_portal(self, developer_portal: str):
        """Sets the developer_portal of this InsuranceEntity.


        :param developer_portal: The developer_portal of this InsuranceEntity.
        :type developer_portal: str
        """

        self._developer_portal = developer_portal

    @property
    def product_catalog(self) -> str:
        """Gets the product_catalog of this InsuranceEntity.


        :return: The product_catalog of this InsuranceEntity.
        :rtype: str
        """
        return self._product_catalog

    @product_catalog.setter
    def product_catalog(self, product_catalog: str):
        """Sets the product_catalog of this InsuranceEntity.


        :param product_catalog: The product_catalog of this InsuranceEntity.
        :type product_catalog: str
        """

        self._product_catalog = product_catalog

    @property
    def vat(self) -> str:
        """Gets the vat of this InsuranceEntity.


        :return: The vat of this InsuranceEntity.
        :rtype: str
        """
        return self._vat

    @vat.setter
    def vat(self, vat: str):
        """Sets the vat of this InsuranceEntity.


        :param vat: The vat of this InsuranceEntity.
        :type vat: str
        """

        self._vat = vat
