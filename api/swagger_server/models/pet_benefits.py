# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PetBenefits(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    VETERINARY_EXAM_FEES = "Veterinary exam fees"
    HOSPITALIZATION = "Hospitalization"
    SURGERIES = "Surgeries"
    INJURIES_AND_ILLNESSES = "Injuries and illnesses"
    CANCER = "Cancer"
    SPECIALTY_AND_EMERGENCY_VETS = "Specialty and emergency vets"
    CHRONIC_CONDITIONS = "Chronic conditions"
    HEREDITARY_CONDITIONS = "Hereditary conditions"
    X_RAYS_MRIS_CT_SCANS_ULTRASOUNDS = "X-rays, MRIs, CT scans, ultrasounds"
    DIAGNOSTIC_TESTING = "Diagnostic testing"
    PRESCRIPTION_MEDICATION = "Prescription medication"
    PRESCRIBED_THERAPEUTIC_DIETS = "Prescribed therapeutic diets"
    PRESCRIBED_NUTRITIONAL_SUPPLEMENTS = "Prescribed nutritional supplements"
    DENTAL_DISEASES = "Dental diseases"
    CONGENITAL_CONDITIONS = "Congenital conditions"
    BLOOD_DISORDERS = "Blood disorders"
    EYE_DISORDERS = "Eye disorders"
    MUSCULOSKELETAL_DISORDERS = "Musculoskeletal disorders"
    RESPIRATORY_CONDITIONS = "Respiratory conditions"
    BEHAVIORAL_EXAM_AND_TREATMENT = "Behavioral exam and treatment"
    PRE_EXISTING_CONDITIONS = "Pre-existing conditions"
    BOARDING_GROOMING = "Boarding/grooming"
    COSMETIC_PROCEDURES = "Cosmetic procedures"
    ANAL_GLAND_EXPRESSION = "Anal gland expression"
    PREVENTIVE_GASTROPEXY = "Preventive gastropexy"
    VACCINATION_OR_TITER = "Vaccination or titer"
    HEARTWORM_OR_FELV_FIV_TEST = "Heartworm or FeLV/FIV test"
    FECAL_TEST = "Fecal test"
    DEWORMING = "Deworming"
    MICROCHIP = "Microchip"
    HEALTH_CERTIFICATE = "Health certificate"
    FLEA_CONTROL = "Flea control"
    HEARTWORM_PREVENTION = "Heartworm prevention"
    TICK_CONTROL = "Tick control"
    DENTAL_CLEANING = "Dental cleaning"
    SPAY_OR_NEUTER = "Spay or neuter"
    TREATMENT_OF_INTERNAL_AND_EXTERNAL_PARASITES = "Treatment of internal and external parasites"
    DIAGNOSTIC_TESTING = "Diagnostic testing"
    def __init__(self):  # noqa: E501
        """PetBenefits - a model defined in Swagger

        """
        self.swagger_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'PetBenefits':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The petBenefits of this PetBenefits.  # noqa: E501
        :rtype: PetBenefits
        """
        return util.deserialize_model(dikt, cls)
