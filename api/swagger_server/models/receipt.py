# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Receipt(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, receipt_type: str=None, receipt_date: date=None, payment_amount: float=None, receipt_calculation: str=None, premium_payment_method: str=None):  # noqa: E501
        """Receipt - a model defined in Swagger

        :param receipt_type: The receipt_type of this Receipt.  # noqa: E501
        :type receipt_type: str
        :param receipt_date: The receipt_date of this Receipt.  # noqa: E501
        :type receipt_date: date
        :param payment_amount: The payment_amount of this Receipt.  # noqa: E501
        :type payment_amount: float
        :param receipt_calculation: The receipt_calculation of this Receipt.  # noqa: E501
        :type receipt_calculation: str
        :param premium_payment_method: The premium_payment_method of this Receipt.  # noqa: E501
        :type premium_payment_method: str
        """
        self.swagger_types = {
            'receipt_type': str,
            'receipt_date': date,
            'payment_amount': float,
            'receipt_calculation': str,
            'premium_payment_method': str
        }

        self.attribute_map = {
            'receipt_type': 'receiptType',
            'receipt_date': 'receiptDate',
            'payment_amount': 'paymentAmount',
            'receipt_calculation': 'receiptCalculation',
            'premium_payment_method': 'premiumPaymentMethod'
        }
        self._receipt_type = receipt_type
        self._receipt_date = receipt_date
        self._payment_amount = payment_amount
        self._receipt_calculation = receipt_calculation
        self._premium_payment_method = premium_payment_method

    @classmethod
    def from_dict(cls, dikt) -> 'Receipt':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Receipt of this Receipt.  # noqa: E501
        :rtype: Receipt
        """
        return util.deserialize_model(dikt, cls)

    @property
    def receipt_type(self) -> str:
        """Gets the receipt_type of this Receipt.


        :return: The receipt_type of this Receipt.
        :rtype: str
        """
        return self._receipt_type

    @receipt_type.setter
    def receipt_type(self, receipt_type: str):
        """Sets the receipt_type of this Receipt.


        :param receipt_type: The receipt_type of this Receipt.
        :type receipt_type: str
        """

        self._receipt_type = receipt_type

    @property
    def receipt_date(self) -> date:
        """Gets the receipt_date of this Receipt.


        :return: The receipt_date of this Receipt.
        :rtype: date
        """
        return self._receipt_date

    @receipt_date.setter
    def receipt_date(self, receipt_date: date):
        """Sets the receipt_date of this Receipt.


        :param receipt_date: The receipt_date of this Receipt.
        :type receipt_date: date
        """

        self._receipt_date = receipt_date

    @property
    def payment_amount(self) -> float:
        """Gets the payment_amount of this Receipt.


        :return: The payment_amount of this Receipt.
        :rtype: float
        """
        return self._payment_amount

    @payment_amount.setter
    def payment_amount(self, payment_amount: float):
        """Sets the payment_amount of this Receipt.


        :param payment_amount: The payment_amount of this Receipt.
        :type payment_amount: float
        """

        self._payment_amount = payment_amount

    @property
    def receipt_calculation(self) -> str:
        """Gets the receipt_calculation of this Receipt.


        :return: The receipt_calculation of this Receipt.
        :rtype: str
        """
        return self._receipt_calculation

    @receipt_calculation.setter
    def receipt_calculation(self, receipt_calculation: str):
        """Sets the receipt_calculation of this Receipt.


        :param receipt_calculation: The receipt_calculation of this Receipt.
        :type receipt_calculation: str
        """

        self._receipt_calculation = receipt_calculation

    @property
    def premium_payment_method(self) -> str:
        """Gets the premium_payment_method of this Receipt.


        :return: The premium_payment_method of this Receipt.
        :rtype: str
        """
        return self._premium_payment_method

    @premium_payment_method.setter
    def premium_payment_method(self, premium_payment_method: str):
        """Sets the premium_payment_method of this Receipt.


        :param premium_payment_method: The premium_payment_method of this Receipt.
        :type premium_payment_method: str
        """

        self._premium_payment_method = premium_payment_method
