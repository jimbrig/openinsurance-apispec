# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PropertyType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AGRICULTURE = "Agriculture"
    AIRPORT = "Airport"
    ANIMALSHELTER = "AnimalShelter"
    APARTMENT = "Apartment"
    APARTMENTCOMPLEX = "ApartmentComplex"
    AQUARIUM = "Aquarium"
    ARCHIVE_ORGANIZATION = "Archive Organization"
    AUTOMOTIVE_BUSINESS = "Automotive Business"
    BEACH = "Beach"
    BOAT_SLIP = "Boat Slip"
    BOATTERMINAL = "BoatTerminal"
    BRIDGE = "Bridge"
    BUNGALOW = "Bungalow"
    BUSINESS = "Business"
    BUSSTATION = "BusStation"
    BUSSTOP = "BusStop"
    CABIN = "Cabin"
    CAMPGROUND = "Campground"
    CEMETERY = "Cemetery"
    CHALET = "Chalet"
    CHILDCARE = "ChildCare"
    CONDOMINIUM = "Condominium"
    CREMATORIUM = "Crematorium"
    DEEDED_PARKING = "Deeded Parking"
    DENTIST = "Dentist"
    DRY_CLEANING_OR_LAUNDRY = "Dry Cleaning Or Laundry"
    DUPLEX = "Duplex"
    EDUCATIONAL_ORGANIZATION = "Educational Organization"
    EMERGENCY_SERVICE = "Emergency Service"
    EMPLOYMENT_AGENCY = "Employment Agency"
    ENTERTAINMENT_BUSINESS = "Entertainment Business"
    EVENT_VENUE = "Event Venue"
    FARM = "Farm"
    FINANCIAL_SERVICE = "Financial Service"
    FIRE_STATION = "Fire Station"
    FOOD_ESTABLISHMENT = "Food Establishment"
    GATED_RESIDENCE_COMMUNITY = "Gated Residence Community"
    GOVERNMENT_BUILDING = "Government Building"
    GOVERNMENT_OFFICE = "Government Office"
    HALL_OF_RESIDENCE = "Hall of Residence"
    HEALTH_AND_BEAUTY_BUSINESS = "Health and Beauty Business"
    HOME_AND_CONSTRUCTION_BUSINESS = "Home and Construction Business"
    HOSPITAL = "Hospital"
    HOTEL_OR_MOTEL = "Hotel or Motel"
    INDUSTRIAL = "Industrial"
    INTERNETCAFE = "InternetCafe"
    LEGALSERVICE = "LegalService"
    LIBRARY = "Library"
    LODGINGBUSINESS = "LodgingBusiness"
    MAISONETTE = "Maisonette"
    MANUFACTURED_HOME = "Manufactured Home"
    MANUFACTURED_ON_LAND = "Manufactured On Land"
    MEDICALBUSINESS = "MedicalBusiness"
    MIXED_USE = "Mixed Use"
    MOBILE_HOME = "Mobile Home"
    MOVIETHEATER = "MovieTheater"
    MULTI_FAMILY = "Multi Family"
    MUSEUM = "Museum"
    MUSIC_VENUE = "Music Venue"
    OFFICE = "Office"
    OWN_YOUR_OWN = "Own Your Own"
    PARK = "Park"
    PARKING_FACILITY = "Parking Facility"
    PERFORMING_ARTS_THEATER = "Performing Arts Theater"
    PLACE_OF_WORSHIP = "Place of Worship"
    PLAYGROUND = "Playground"
    POLICESTATION = "PoliceStation"
    PROFESSIONAL_SERVICE = "Professional Service"
    PUBLICTOILET = "PublicToilet"
    QUADRUPLEX = "Quadruplex"
    RADIOSTATION = "RadioStation"
    RANCH = "Ranch"
    REAL_ESTATE_AGENT = "Real Estate Agent"
    RECYCLING_CENTER = "Recycling Center"
    RESIDENTIAL_CARAVAN = "Residential Caravan"
    RETAIL = "Retail"
    RVPARK = "RVPark"
    SELF_STORAGE = "Self Storage"
    SHOPPING_CENTER = "Shopping Center"
    SHOW_HOUSE = "Show House"
    SINGLE_FAMILY_RESIDENCE = "Single Family Residence"
    SPORTS_ACTIVITY_LOCATION = "Sports Activity Location"
    STADIUM_OR_ARENA = "Stadium or Arena"
    STOCK_COOPERATIVE = "Stock Cooperative"
    STORE = "Store"
    SUBWAY_STATION = "Subway Station"
    TAXISTAND = "TaxiStand"
    TELEVISION_STATION = "Television Station"
    TIMESHARE = "Timeshare"
    TOURIST_INFORMATION_CENTER = "Tourist Information Center"
    TOWNHOUSE = "Townhouse"
    TRAIN_STATION = "Train Station"
    TRAVEL_AGENCY = "Travel Agency"
    TRIPLEX = "Triplex"
    UNDER_CONSTRUCTION = "Under construction"
    WAREHOUSE = "Warehouse"
    ZOO = "Zoo"
    def __init__(self):  # noqa: E501
        """PropertyType - a model defined in Swagger

        """
        self.swagger_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'PropertyType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The propertyType of this PropertyType.  # noqa: E501
        :rtype: PropertyType
        """
        return util.deserialize_model(dikt, cls)
